{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/buttons/buttons.ts","src/ts/components/forms/inputs.ts","src/ts/layout/data.ts","src/ts/layout/keypad.ts","src/ts/main.ts","src/ts/pages/dialpad.ts","src/ts/utilities/longPress.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","__importDefault","mod","__esModule","default","value","longPress_1","DialpadButton","config","instance","TypeError","_classCallCheck","this","undefined","subtitle","onLongPress","parentElement","appendChild","skeleton","get","_this","button","document","createElement","id","classList","add","setAttribute","ariaLabel","titleElement","subtitleElement","apply","onLongPressCallback","onPressStart","onClick","title","addEventListener","innerText","_a","namespace","getElementById","InputElement","focused","focus","querySelector","currentValue","currentCaretPosition","caretPosition","updatedValue","slice","updatedCaretPosition","count","arguments","beforeCaretValue","afterCaretValue","endIndex","inputEventHandler","removeValue","insertValue","caretPositionBeforeRemoveUnwantedChars","updatedValueAfterRemoveUnwantedChars","replace","validation","console","log","onValueEmpty","onValueNonEmpty","input","className","name","type","autofocus","inputMode","autocomplete","bind","makeSureFocused","selectionStart","set","position","selectionEnd","activeElement","buttons_1","data_1","Keypad","iconName","iconElement","backspaceButtonElement","disabled","keypad","forEach","onKeypadBtnClick","onZeroBtnLongPress","build","callButton","backspaceButton","callBtn","getMaterialIcon","onCallBtnClick","backspaceBtn","onBackspaceBtnClick","onBackspaceBtnLongPress","dialpad_1","window","onload","body","inputs_1","keypad_1","Dialpad","dialpad","inputFieldLayout","keypadLayout","element","remove","inputField","disableBackspaceButton","enableBackspaceButton","_this2","replaceValue","LongPressEvent","isHeld","activeHoldTimeoutId","longPressTimeout","onHoldStart","onHoldEnd","setTimeout","clearTimeout"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import LongPressEvent from '../../utilities/longPress';\nimport DialpadButtonConfig from './type';\n\n/**\n *\n * Dialpad Button\n *\n */\nexport default class DialpadButton {\n  // button config\n  private config: DialpadButtonConfig;\n\n  /**\n   *\n   * construct DialpadButton instance\n   *\n   */\n  constructor(config: DialpadButtonConfig) {\n    // config assertion\n    if (config.subtitle === undefined && config.onLongPress !== undefined) {\n      throw new Error('Invalid config for dialPad button');\n    }\n\n    this.config = config;\n  }\n\n  /**\n   *\n   * Dialpad button skeleton\n   *\n   */\n  private get skeleton(): HTMLButtonElement {\n    const button = document.createElement('button');\n    button.id = this.id;\n    button.classList.add('dialpad-btn');\n    button.setAttribute('aria-label', this.config.ariaLabel);\n\n    // append title\n    button.appendChild(this.titleElement);\n\n    // append subtitle\n    button.appendChild(this.subtitleElement);\n\n    // apply long press event\n    if (this.config.onLongPress !== undefined) {\n      LongPressEvent.apply({\n        target: button,\n        onLongPressCallback: () => {\n          this.config.onLongPress!(this.config.subtitle!);\n        },\n        onPressStart: () => {\n          this.config.onClick(this.config.title);\n        },\n      });\n    } else {\n      // add click event listener\n      button.addEventListener('click', () => {\n        this.config.onClick(this.config.title);\n      });\n    }\n\n    return button;\n  }\n\n  /**\n   *\n   * Dialpad button tile element\n   *\n   */\n  private get titleElement(): HTMLElement {\n    const title = document.createElement('h1');\n    title.classList.add('dialpad-btn__title');\n    title.innerText = this.config.title;\n    return title;\n  }\n\n  /**\n   *\n   * Dialpad button subtile\n   *\n   */\n  private get subtitleElement(): HTMLElement {\n    const subtitle = document.createElement('p');\n    subtitle.classList.add('dialpad-btn__subtitle');\n    subtitle.innerText = this.config.subtitle ?? '';\n    return subtitle;\n  }\n\n  /**\n   *\n   * Unique id for dialpad button\n   *\n   */\n  get id() {\n    return `dialpad-btn-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Dialpad button query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLButtonElement {\n    return document.getElementById(this.id)! as HTMLButtonElement;\n  }\n\n  /**\n   *\n   * Appends dialpad button to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n}\n","import { InputElementConfig } from './types';\n\n/**\n *\n * Input Element\n *\n */\nexport default class InputElement {\n  // input element config\n  private config: InputElementConfig;\n\n  /**\n   *\n   * construct InputElement instance\n   *\n   */\n  constructor(config: InputElementConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * input element skeleton\n   *\n   */\n  private get skeleton(): HTMLInputElement {\n    const input = document.createElement('input');\n    input.id = this.id;\n    input.className = 'input-element';\n    input.name = 'number';\n    input.type = 'text';\n    input.autofocus = true;\n    input.inputMode = 'none';\n    input.autocomplete = 'off';\n\n    // add input event listener\n    input.addEventListener('input', this.inputEventHandler.bind(this));\n\n    return input;\n  }\n\n  /**\n   *\n   * Input element query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLInputElement {\n    return document.getElementById(this.id) as HTMLInputElement;\n  }\n\n  /**\n   *\n   * Unique id for input element\n   *\n   * @returns {string}\n   *\n   */\n  get id(): string {\n    return `input-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Appends input element to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n\n  /**\n   *\n   * Make sure input element is focused\n   *\n   */\n  makeSureFocused() {\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n\n  /**\n   *\n   * Get input element caret position\n   *\n   */\n  get caretPosition(): number {\n    // make sure the input is focused\n    this.makeSureFocused();\n    return this.querySelector.selectionStart!;\n  }\n\n  /**\n   *\n   * Set input element caret position\n   *\n   * @param position - desired caret position index value\n   *\n   */\n  set caretPosition(position: number) {\n    // make sure the input is focused\n    this.makeSureFocused();\n\n    // set selection\n    this.querySelector.selectionStart = position;\n    this.querySelector.selectionEnd = position;\n  }\n\n  /**\n   *\n   * To check whether the input element is focused or not\n   *\n   */\n  get focused(): boolean {\n    return document.activeElement === this.querySelector;\n  }\n\n  /**\n   *\n   * To get input element value\n   *\n   */\n  get value(): string {\n    return this.querySelector.value;\n  }\n\n  /**\n   *\n   * To set input element value\n   *\n   * @param value - The value to set\n   *\n   */\n  set value(value: string) {\n    this.querySelector.value = value;\n  }\n\n  /**\n   *\n   * Focus input element\n   *\n   */\n  focus() {\n    this.querySelector.focus();\n  }\n\n  /**\n   *\n   * Insert a value at the caret position\n   *\n   * @param value - The value to be inserted\n   *\n   */\n  // eslint-disable-next-line class-methods-use-this\n  insertValue(value: string) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const updatedValue =\n      currentValue.slice(0, currentCaretPosition) +\n      value +\n      currentValue.slice(currentCaretPosition);\n    const updatedCaretPosition = currentCaretPosition + value.length;\n\n    // update state\n    this.value = updatedValue;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * Remove characters from the value starting at the caret position\n   *\n   * @param count - The number of characters, default value is 1\n   *\n   */\n  removeValue(count: number = 1) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const beforeCaretValue = currentValue.slice(0, currentCaretPosition);\n\n    // if before caret value is empty do nothing\n    if (beforeCaretValue !== '') {\n      const afterCaretValue = currentValue.slice(currentCaretPosition);\n      const endIndex = beforeCaretValue.length - count;\n      const updatedValue =\n        beforeCaretValue.slice(0, endIndex) + afterCaretValue;\n      const updatedCaretPosition = currentCaretPosition - count;\n\n      // update state\n      this.value = updatedValue;\n      this.caretPosition = updatedCaretPosition;\n\n      // check empty or not\n      this.inputEventHandler();\n    }\n  }\n\n  /**\n   *\n   * @param value - The value to be replaced current last value\n   *\n   */\n  replaceValue(value: string) {\n    this.removeValue();\n    this.insertValue(value);\n  }\n\n  /**\n   *\n   * Clear the value of input element\n   *\n   */\n  clear() {\n    this.value = '';\n    this.focus();\n  }\n\n  /**\n   *\n   * Remove unwanted symbols and allow only digits, +, *, and #\n   *\n   */\n  validation() {\n    // prepare updated state\n    const caretPositionBeforeRemoveUnwantedChars = this.caretPosition;\n    const updatedValueAfterRemoveUnwantedChars = this.value.replace(\n      /[^0-9+*#]/g,\n      ''\n    );\n    const updatedCaretPosition =\n      caretPositionBeforeRemoveUnwantedChars +\n      updatedValueAfterRemoveUnwantedChars.length -\n      this.value.length;\n\n    // update state\n    this.value = updatedValueAfterRemoveUnwantedChars;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * `input` event handler\n   *\n   */\n  private inputEventHandler() {\n    // Remove unwanted symbols and allow only digits, +, *, and #\n    this.validation();\n\n    // check whether the value is empty or not, and act accordingly.\n    if (this.value === '') {\n      // eslint-disable-next-line no-console\n      console.log('value empty');\n      this.config.onValueEmpty();\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('value non empty');\n      this.config.onValueNonEmpty();\n    }\n  }\n}\n","import { KeypadButtonData } from './types';\r\n\r\n/**\r\n *\r\n * Keypad buttons data\r\n *\r\n */\r\nconst KEYPAD_BUTTONS_DATA: Array<KeypadButtonData> = [\r\n  {\r\n    namespace: 'one',\r\n    ariaLabel: 'One',\r\n    title: '1',\r\n  },\r\n  {\r\n    namespace: 'two',\r\n    ariaLabel: 'Two',\r\n    title: '2',\r\n    subtitle: 'ABC',\r\n  },\r\n  {\r\n    namespace: 'three',\r\n    ariaLabel: 'Three',\r\n    title: '3',\r\n    subtitle: 'DEF',\r\n  },\r\n  {\r\n    namespace: 'four',\r\n    ariaLabel: 'Four',\r\n    title: '4',\r\n    subtitle: 'GHI',\r\n  },\r\n  {\r\n    namespace: 'five',\r\n    ariaLabel: 'Five',\r\n    title: '5',\r\n    subtitle: 'JKL',\r\n  },\r\n  {\r\n    namespace: 'six',\r\n    ariaLabel: 'Six',\r\n    title: '6',\r\n    subtitle: 'MNO',\r\n  },\r\n  {\r\n    namespace: 'seven',\r\n    ariaLabel: 'Seven',\r\n    title: '7',\r\n    subtitle: 'PQRS',\r\n  },\r\n  {\r\n    namespace: 'eight',\r\n    ariaLabel: 'Eight',\r\n    title: '8',\r\n    subtitle: 'TUV',\r\n  },\r\n  {\r\n    namespace: 'nine',\r\n    ariaLabel: 'Nine',\r\n    title: '9',\r\n    subtitle: 'WXYZ',\r\n  },\r\n  {\r\n    namespace: 'star',\r\n    ariaLabel: 'Star',\r\n    title: '*',\r\n  },\r\n  {\r\n    namespace: 'zero',\r\n    ariaLabel: 'Zero',\r\n    title: '0',\r\n    subtitle: '+',\r\n  },\r\n  {\r\n    namespace: 'hash',\r\n    ariaLabel: 'Hash',\r\n    title: '#',\r\n  },\r\n];\r\n\r\nexport default KEYPAD_BUTTONS_DATA;\r\n","import DialpadButton from '../components/buttons/buttons';\nimport LongPressEvent from '../utilities/longPress';\nimport KEYPAD_BUTTONS_DATA from './data';\nimport { KeypadButtonData, KeypadConfig } from './types';\n\n/**\n *\n * Keypad\n *\n */\nexport default class Keypad {\n  // keypad config\n  private config: KeypadConfig;\n\n  /**\n   *\n   * construct Keypad instance\n   *\n   */\n  constructor(config: KeypadConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * Keypad skeleton\n   *\n   */\n  private get skeleton(): HTMLDivElement {\n    const keypad = document.createElement('div');\n    keypad.id = this.id;\n    keypad.classList.add('keypad');\n\n    // append digits buttons\n    KEYPAD_BUTTONS_DATA.forEach((config: KeypadButtonData) => {\n      // create button instance\n      const btn = new DialpadButton({\n        namespace: config.namespace,\n        ariaLabel: config.ariaLabel,\n        title: config.title,\n        subtitle: config.subtitle,\n        onClick: this.config.onKeypadBtnClick,\n        onLongPress:\n          config.title === '0' ? this.config.onZeroBtnLongPress : undefined,\n      });\n\n      // append button\n      btn.build(keypad);\n    });\n\n    // append dummy element\n    keypad.appendChild(document.createElement('span'));\n\n    // append call button\n    keypad.appendChild(this.callButton);\n\n    // append backspace button\n    keypad.appendChild(this.backspaceButton);\n\n    return keypad;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getMaterialIcon(iconName: string) {\n    const iconElement = document.createElement('span');\n    iconElement.className = 'material-symbols-outlined';\n    iconElement.innerText = iconName;\n    return iconElement;\n  }\n\n  /**\n   *\n   * Keypad call button\n   *\n   */\n  private get callButton(): HTMLElement {\n    const callBtn = document.createElement('button');\n    callBtn.classList.add('keypad__call-btn');\n    callBtn.setAttribute('aria-label', 'call button');\n\n    // append call icon\n    callBtn.appendChild(this.getMaterialIcon('call'));\n\n    // add click event listener\n    callBtn.addEventListener('click', this.config.onCallBtnClick);\n\n    return callBtn;\n  }\n\n  /**\n   *\n   * Keypad backspace button\n   *\n   */\n  private get backspaceButton(): HTMLElement {\n    const backspaceBtn = document.createElement('button');\n    backspaceBtn.classList.add('keypad__backspace-btn');\n    backspaceBtn.setAttribute('aria-label', 'Backspace button');\n    backspaceBtn.disabled = true;\n\n    // append backspace icon\n    backspaceBtn.appendChild(this.getMaterialIcon('backspace'));\n\n    // add click event listener\n    backspaceBtn.addEventListener('click', this.config.onBackspaceBtnClick);\n\n    // apply long press event\n    LongPressEvent.apply({\n      target: backspaceBtn,\n      onLongPressCallback: this.config.onBackspaceBtnLongPress,\n    });\n\n    return backspaceBtn;\n  }\n\n  /**\n   *\n   * To get backspace button element for dom manipulations\n   *\n   */\n  get backspaceButtonElement(): HTMLButtonElement {\n    return this.querySelector.querySelector(\n      '.keypad__backspace-btn'\n    ) as HTMLButtonElement;\n  }\n\n  /**\n   *\n   * Unique id for keypad\n   *\n   */\n  get id() {\n    return `keypad-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Keypad query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLDivElement {\n    return document.getElementById(this.id)! as HTMLDivElement;\n  }\n\n  /**\n   *\n   * Appends keypad to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n\n  /**\n   *\n   * Enable backspace button\n   *\n   */\n  enableBackspaceButton() {\n    this.backspaceButtonElement.disabled = false;\n  }\n\n  /**\n   *\n   * Disable backspace button\n   *\n   */\n  disableBackspaceButton() {\n    this.backspaceButtonElement.disabled = true;\n  }\n}\n","import Dialpad from './pages/dialpad';\r\n\r\nwindow.onload = () => {\r\n  // create dialpad instance\r\n  const dialpad = new Dialpad({ namespace: 'demo' });\r\n\r\n  // build dialpad\r\n  dialpad.build(document.body);\r\n};\r\n","import InputElement from '../components/forms/inputs';\nimport Keypad from '../layout/keypad';\nimport DialpadConfig from './types';\n\n/**\n *\n * Dialpad Page\n *\n */\nexport default class Dialpad {\n  // dialpad configuration\n  private config: DialpadConfig;\n\n  // input field instance\n  private inputField!: InputElement;\n\n  // keypad instance\n  private keypad!: Keypad;\n\n  /**\n   *\n   * construct Dialpad instance\n   *\n   */\n  constructor(config: DialpadConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * page skeleton\n   *\n   * @returns {HTMLDivElement}\n   *\n   */\n  private skeleton(): HTMLElement {\n    const dialpad = document.createElement('section');\n    dialpad.id = this.id;\n    dialpad.className = 'dialpad';\n\n    // build input field\n    this.inputFieldLayout.build(dialpad);\n\n    // build keypad layout\n    this.keypadLayout.build(dialpad);\n\n    return dialpad;\n  }\n\n  /**\n   *\n   * To get Input Element\n   *\n   */\n  private get inputFieldLayout(): InputElement {\n    this.inputField = new InputElement({\n      namespace: this.config.namespace,\n      onValueEmpty: () => {\n        // eslint-disable-next-line no-console\n        console.log('disable backspace button');\n        this.keypad.disableBackspaceButton();\n      },\n      onValueNonEmpty: () => {\n        // eslint-disable-next-line no-console\n        console.log('enable backspace button');\n        this.keypad.enableBackspaceButton();\n      },\n    });\n    return this.inputField;\n  }\n\n  /**\n   *\n   * To get Keypad Layout\n   *\n   */\n  private get keypadLayout() {\n    this.keypad = new Keypad({\n      namespace: this.config.namespace,\n      onKeypadBtnClick: (value: string) => {\n        // eslint-disable-next-line no-console\n        console.log('clicked on button', value);\n\n        // insert value\n        this.inputField.insertValue(value);\n        this.keypad.enableBackspaceButton();\n      },\n      onZeroBtnLongPress: (value: string) => {\n        // eslint-disable-next-line no-console\n        console.log('long pressed on zero button');\n\n        // insert zero button subtitle value `+`\n        this.inputField.replaceValue(value);\n      },\n      onCallBtnClick: () => {\n        // eslint-disable-next-line no-console\n        console.log('clicked on call button');\n\n        // eslint-disable-next-line no-console\n        console.log('placing call on ', this.inputField.value);\n      },\n      onBackspaceBtnClick: () => {\n        // eslint-disable-next-line no-console\n        console.log('clicked on clear button');\n        this.inputField.removeValue();\n      },\n      onBackspaceBtnLongPress: () => {\n        // eslint-disable-next-line no-console\n        console.log('long press on backspace button');\n\n        // clear input value and hide backspace button\n        this.inputField.value = '';\n        this.inputField.focus();\n        this.keypad.disableBackspaceButton();\n      },\n    });\n\n    return this.keypad;\n  }\n\n  /**\n   *\n   * Unique id for page\n   *\n   * @returns {string}\n   *\n   */\n  get id(): string {\n    return `dialpad-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * querySelect for app\n   *\n   * @returns {HTMLElement}\n   *\n   */\n  get element(): HTMLElement {\n    return document.getElementById(this.id)!;\n  }\n\n  /**\n   *\n   * Remove dialpad skeleton from dom\n   *\n   */\n  destroy(): void {\n    this.element.remove();\n  }\n\n  /**\n   *\n   * Append dialpad skeleton into parent element\n   *\n   * @param parentElement {HTMLElement}\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton());\n  }\n}\n","import LongPressEventConfig from './types';\n\n/**\n *\n * LongPress event\n *\n */\nexport default class LongPressEvent {\n  // target html element\n  private config: LongPressEventConfig;\n\n  // state to detect press and hold\n  private isHeld: boolean = false;\n\n  // setTimeout Id\n  private activeHoldTimeoutId: number | null = null;\n\n  // long press timeout in milliseconds\n  private longPressTimeout = 500;\n\n  /**\n   *\n   * construct LongPressEvent instance and add event listener\n   *\n   */\n  constructor(config: LongPressEventConfig) {\n    this.config = config;\n\n    // start timer\n    this.config.target.addEventListener(\n      'mousedown',\n      this.onHoldStart.bind(this)\n    );\n    this.config.target.addEventListener(\n      'touchstart',\n      this.onHoldStart.bind(this)\n    );\n\n    // stop timer\n    this.config.target.addEventListener('mouseup', this.onHoldEnd.bind(this));\n    this.config.target.addEventListener('mouseout', this.onHoldEnd.bind(this));\n    this.config.target.addEventListener(\n      'mouseleave',\n      this.onHoldEnd.bind(this)\n    );\n    this.config.target.addEventListener('touchend', this.onHoldEnd.bind(this));\n    this.config.target.addEventListener(\n      'touchcancel',\n      this.onHoldEnd.bind(this)\n    );\n  }\n\n  /**\n   *\n   * start set timeout timer on long press event for callback execution\n   *\n   */\n  private onHoldStart() {\n    // eslint-disable-next-line no-console\n    console.log('Start Pressing');\n    this.isHeld = true;\n\n    // call on press start handler\n    if (this.config.onPressStart) {\n      this.config.onPressStart();\n    }\n\n    this.activeHoldTimeoutId = window.setTimeout(() => {\n      if (this.isHeld === true) {\n        // eslint-disable-next-line no-console\n        console.log('long press detected');\n        this.config.onLongPressCallback();\n      }\n    }, this.longPressTimeout);\n  }\n\n  /**\n   *\n   * clear set timeout timer on long press event\n   *\n   */\n  private onHoldEnd() {\n    // eslint-disable-next-line no-console\n    console.log('Stop Pressing');\n    this.isHeld = false;\n\n    if (this.activeHoldTimeoutId !== null) {\n      window.clearTimeout(this.activeHoldTimeoutId);\n      this.activeHoldTimeoutId = null;\n    }\n  }\n\n  /**\n   *\n   * Apply long press event without using `new` keyword\n   *\n   */\n  static apply(config: LongPressEventConfig) {\n    // eslint-disable-next-line no-new\n    new LongPressEvent(config);\n  }\n}\n\n// Example how to use\n// window.onload = () => {\n//   // const demoButton = document.querySelector('button');\n//   // Using new keyword\n//   // new ClickAndHold(demoButton, () => {\n//   //     console.log('Long Press');\n//   //     alert('Long Press Detected');\n//   // });\n//   // // Without using new keyword\n//   // ClickAndHold.apply(demoButton, () => {\n//   //   console.log('Long Press');\n//   //   alert('Long Press Detected');\n//   // });\n// };\n"]}