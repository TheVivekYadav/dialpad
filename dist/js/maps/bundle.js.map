{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/buttons/buttons.ts","src/ts/components/forms/inputs.ts","src/ts/layout/data.ts","src/ts/layout/keypad.ts","src/ts/main.ts","src/ts/pages/dialpad.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","value","DialpadButton","config","instance","TypeError","_classCallCheck","this","parentElement","appendChild","skeleton","get","_this","button","document","createElement","id","classList","add","setAttribute","ariaLabel","titleElement","subtitleElement","addEventListener","onClick","title","innerText","_a","subtitle","namespace","getElementById","default","InputElement","focused","focus","querySelector","currentValue","currentCaretPosition","caretPosition","updatedValue","slice","updatedCaretPosition","count","arguments","undefined","beforeCaretValue","afterCaretValue","endIndex","input","className","name","type","autofocus","inputMode","autocomplete","makeSureFocused","selectionStart","set","position","selectionEnd","activeElement","singletonInstance","__importDefault","mod","__esModule","buttons_1","data_1","Keypad","iconName","iconElement","keypad","forEach","onKeypadButtonClick","build","callButton","backspaceButton","callBtn","getMaterialIcon","onCallBtnClick","backspaceBtn","onClearBtnClick","inputs_1","dialpad_1","window","inputElement","onload","body","keypad_1","Dialpad","dialpad","inputField","keypadLayout","element","remove","console","log","insertValue"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import DialpadButtonConfig from './type';\r\n\r\n/**\r\n *\r\n * Dialpad Button\r\n *\r\n */\r\nexport default class DialpadButton {\r\n  // button config\r\n  private config: DialpadButtonConfig;\r\n\r\n  constructor(config: DialpadButtonConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button skeleton\r\n   *\r\n   */\r\n  private get skeleton(): HTMLButtonElement {\r\n    const button = document.createElement('button');\r\n    button.id = this.id;\r\n    button.classList.add('dialpad-btn');\r\n    button.setAttribute('aria-label', this.config.ariaLabel);\r\n\r\n    // append title\r\n    button.appendChild(this.titleElement);\r\n\r\n    // append subtitle\r\n    button.appendChild(this.subtitleElement);\r\n\r\n    // add click event listener\r\n    button.addEventListener('click', () => {\r\n      this.config.onClick(this.config.title);\r\n    });\r\n\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button tile element\r\n   *\r\n   */\r\n  private get titleElement(): HTMLElement {\r\n    const title = document.createElement('h1');\r\n    title.classList.add('dialpad-btn__title');\r\n    title.innerText = this.config.title;\r\n    return title;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button subtile\r\n   *\r\n   */\r\n  private get subtitleElement(): HTMLElement {\r\n    const subtitle = document.createElement('p');\r\n    subtitle.classList.add('dialpad-btn__subtitle');\r\n    subtitle.innerText = this.config.subtitle ?? '';\r\n    return subtitle;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Unique id for dialpad button\r\n   *\r\n   */\r\n  get id() {\r\n    return `dialpad-btn-${this.config.namespace}`;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button query selector for dom manipulation\r\n   *\r\n   */\r\n  get querySelector(): HTMLButtonElement {\r\n    return document.getElementById(this.id)! as HTMLButtonElement;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Appends dialpad button to a specified parent element.\r\n   *\r\n   * @param parentElement\r\n   *\r\n   */\r\n  build(parentElement: HTMLElement) {\r\n    parentElement.appendChild(this.skeleton);\r\n  }\r\n}\r\n","/**\n *\n * Input Element\n *\n */\nexport default class InputElement {\n  // singleton instance\n  // eslint-disable-next-line no-use-before-define\n  private static singletonInstance: InputElement;\n\n  /**\n   *\n   * Make constructor private to prevent direct\n   * construction calls with the `new` operator.\n   *\n   */\n  // eslint-disable-next-line no-useless-constructor, no-empty-function\n  private constructor() {}\n\n  /**\n   *\n   *  The static method that controls the access to the singleton instance.\n   *\n   */\n  static get instance() {\n    // if singleton instance is not initialized yet,\n    // create new instance assign to singleton instance\n    if (!InputElement.singletonInstance) {\n      InputElement.singletonInstance = new InputElement();\n    }\n\n    return InputElement.singletonInstance;\n  }\n\n  /**\n   *\n   * input element skeleton\n   *\n   */\n  private get skeleton(): HTMLInputElement {\n    const input = document.createElement('input');\n    input.className = this.className;\n    input.name = 'number';\n    input.type = 'text';\n    input.autofocus = true;\n    input.inputMode = 'none';\n    input.autocomplete = 'off';\n    return input;\n  }\n\n  /**\n   *\n   * css class name for input element\n   *\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get className() {\n    return 'input-element';\n  }\n\n  /**\n   *\n   * Input element query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLInputElement {\n    return document.querySelector(`.${this.className}`)! as HTMLInputElement;\n  }\n\n  /**\n   *\n   * Appends input element to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n\n  /**\n   *\n   * Make sure input element is focused\n   *\n   */\n  makeSureFocused() {\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n\n  /**\n   *\n   * Get input element caret position\n   *\n   */\n  get caretPosition(): number {\n    // make sure the input is focused\n    this.makeSureFocused();\n    return this.querySelector.selectionStart!;\n  }\n\n  /**\n   *\n   * Set input element caret position\n   *\n   * @param position - desired caret position index value\n   *\n   */\n  set caretPosition(position: number) {\n    // make sure the input is focused\n    this.makeSureFocused();\n\n    // set selection\n    this.querySelector.selectionStart = position;\n    this.querySelector.selectionEnd = position;\n  }\n\n  /**\n   *\n   * To check whether the input element is focused or not\n   *\n   */\n  get focused(): boolean {\n    return document.activeElement === this.querySelector;\n  }\n\n  /**\n   *\n   * To get input element value\n   *\n   */\n  get value(): string {\n    return this.querySelector.value;\n  }\n\n  /**\n   *\n   * To set input element value\n   *\n   * @param value - The value to set\n   *\n   */\n  set value(value: string) {\n    this.querySelector.value = value;\n  }\n\n  /**\n   *\n   * Focus input element\n   *\n   */\n  focus() {\n    this.querySelector.focus();\n  }\n\n  /**\n   *\n   * Insert a value at the caret position\n   *\n   * @param value - The value to be inserted\n   *\n   */\n  // eslint-disable-next-line class-methods-use-this\n  insertValue(value: string) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const updatedValue =\n      currentValue.slice(0, currentCaretPosition) +\n      value +\n      currentValue.slice(currentCaretPosition);\n    const updatedCaretPosition = currentCaretPosition + value.length;\n\n    // update state\n    this.value = updatedValue;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * Remove characters from the value starting at the caret position\n   *\n   * @param count - The number of characters, default value is 1\n   *\n   */\n  remove(count: number = 1) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const beforeCaretValue = currentValue.slice(0, currentCaretPosition);\n    const afterCaretValue = currentValue.slice(currentCaretPosition);\n    const endIndex = beforeCaretValue.length - count;\n    const updatedValue = beforeCaretValue.slice(0, endIndex) + afterCaretValue;\n    const updatedCaretPosition = currentCaretPosition - count;\n\n    // update state\n    this.value = updatedValue;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * Clear the value of input element\n   *\n   */\n  clear() {\n    this.value = '';\n    this.focus();\n  }\n}\n","import { KeypadButtonData } from './type';\r\n\r\n/**\r\n *\r\n * Keypad buttons data\r\n *\r\n */\r\nconst KEYPAD_BUTTONS_DATA: Array<KeypadButtonData> = [\r\n  {\r\n    namespace: 'one',\r\n    ariaLabel: 'One',\r\n    title: '1',\r\n  },\r\n  {\r\n    namespace: 'two',\r\n    ariaLabel: 'Two',\r\n    title: '2',\r\n    subtitle: 'ABC',\r\n  },\r\n  {\r\n    namespace: 'three',\r\n    ariaLabel: 'Three',\r\n    title: '3',\r\n    subtitle: 'DEF',\r\n  },\r\n  {\r\n    namespace: 'four',\r\n    ariaLabel: 'Four',\r\n    title: '4',\r\n    subtitle: 'GHI',\r\n  },\r\n  {\r\n    namespace: 'five',\r\n    ariaLabel: 'Five',\r\n    title: '5',\r\n    subtitle: 'JKL',\r\n  },\r\n  {\r\n    namespace: 'six',\r\n    ariaLabel: 'Six',\r\n    title: '6',\r\n    subtitle: 'MNO',\r\n  },\r\n  {\r\n    namespace: 'seven',\r\n    ariaLabel: 'Seven',\r\n    title: '7',\r\n    subtitle: 'PQRS',\r\n  },\r\n  {\r\n    namespace: 'eight',\r\n    ariaLabel: 'Eight',\r\n    title: '8',\r\n    subtitle: 'TUV',\r\n  },\r\n  {\r\n    namespace: 'nine',\r\n    ariaLabel: 'Nine',\r\n    title: '9',\r\n    subtitle: 'WXYZ',\r\n  },\r\n  {\r\n    namespace: 'star',\r\n    ariaLabel: 'Star',\r\n    title: '*',\r\n  },\r\n  {\r\n    namespace: 'zero',\r\n    ariaLabel: 'Zero',\r\n    title: '0',\r\n    subtitle: '+',\r\n  },\r\n  {\r\n    namespace: 'hash',\r\n    ariaLabel: 'Hash',\r\n    title: '#',\r\n  },\r\n];\r\n\r\nexport default KEYPAD_BUTTONS_DATA;\r\n","import DialpadButton from '../components/buttons/buttons';\nimport KEYPAD_BUTTONS_DATA from './data';\nimport { KeypadButtonData, KeypadConfig } from './type';\n\n/**\n *\n * Keypad\n *\n */\nexport default class Keypad {\n  // keypad config\n  private config: KeypadConfig;\n\n  constructor(config: KeypadConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * Keypad skeleton\n   *\n   */\n  private get skeleton(): HTMLDivElement {\n    const keypad = document.createElement('div');\n    keypad.id = this.id;\n    keypad.classList.add('keypad');\n\n    // append digits buttons\n    KEYPAD_BUTTONS_DATA.forEach((config: KeypadButtonData) => {\n      // create button instance\n      const btn = new DialpadButton({\n        namespace: config.namespace,\n        ariaLabel: config.ariaLabel,\n        title: config.title,\n        subtitle: config.subtitle,\n        onClick: this.config.onKeypadButtonClick,\n      });\n\n      // append button\n      btn.build(keypad);\n    });\n\n    // append dummy element\n    keypad.appendChild(document.createElement('span'));\n\n    // append call button\n    keypad.appendChild(this.callButton);\n\n    // append backspace button\n    keypad.appendChild(this.backspaceButton);\n\n    return keypad;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getMaterialIcon(iconName: string) {\n    const iconElement = document.createElement('span');\n    iconElement.className = 'material-symbols-outlined';\n    iconElement.innerText = iconName;\n    return iconElement;\n  }\n\n  /**\n   *\n   * Keypad call button\n   *\n   */\n  private get callButton(): HTMLElement {\n    const callBtn = document.createElement('button');\n    callBtn.classList.add('keypad__call-btn');\n    callBtn.setAttribute('aria-label', 'call button');\n\n    // append call icon\n    callBtn.appendChild(this.getMaterialIcon('call'));\n\n    // add click event listener\n    callBtn.addEventListener('click', this.config.onCallBtnClick);\n\n    return callBtn;\n  }\n\n  /**\n   *\n   * Keypad backspace button\n   *\n   */\n  private get backspaceButton(): HTMLElement {\n    const backspaceBtn = document.createElement('button');\n    backspaceBtn.classList.add('keypad__backspace-btn');\n    backspaceBtn.setAttribute('aria-label', 'Backspace button');\n\n    // append backspace icon\n    backspaceBtn.appendChild(this.getMaterialIcon('backspace'));\n\n    // add click event listener\n    backspaceBtn.addEventListener('click', this.config.onClearBtnClick);\n\n    return backspaceBtn;\n  }\n\n  /**\n   *\n   * Unique id for keypad\n   *\n   */\n  get id() {\n    return `keypad-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Keypad query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLDivElement {\n    return document.getElementById(this.id)! as HTMLDivElement;\n  }\n\n  /**\n   *\n   * Appends keypad to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n}\n","import InputElement from './components/forms/inputs';\nimport Dialpad from './pages/dialpad';\n\n// extend type\ndeclare global {\n  // eslint-disable-next-line no-unused-vars\n  interface Window {\n    inputElement: InputElement;\n  }\n}\n\n// expose input element instance\nwindow.inputElement = InputElement.instance;\n\nwindow.onload = () => {\n  // create dialpad instance\n  const dialpad = new Dialpad({ namespace: 'demo' });\n\n  // build dialpad\n  dialpad.build(document.body);\n};\n","import InputElement from '../components/forms/inputs';\r\nimport Keypad from '../layout/keypad';\r\nimport DialpadConfig from './types';\r\n\r\n/**\r\n *\r\n * Dialpad Page\r\n *\r\n */\r\nexport default class Dialpad {\r\n  // dialpad configuration\r\n  private config: DialpadConfig;\r\n\r\n  constructor(config: DialpadConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * page skeleton\r\n   *\r\n   * @returns {HTMLDivElement}\r\n   *\r\n   */\r\n  private skeleton(): HTMLElement {\r\n    const dialpad = document.createElement('section');\r\n    dialpad.id = this.id;\r\n    dialpad.className = 'dialpad';\r\n\r\n    // build input field\r\n    this.inputField.build(dialpad);\r\n\r\n    // build keypad layout\r\n    this.keypadLayout.build(dialpad);\r\n\r\n    return dialpad;\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  private get inputField() {\r\n    return InputElement.instance;\r\n  }\r\n\r\n  private get keypadLayout() {\r\n    const keypad = new Keypad({\r\n      namespace: this.config.namespace,\r\n      onKeypadButtonClick: (value: string) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('clicked on button', value);\r\n\r\n        // insert value\r\n        this.inputField.insertValue(value);\r\n      },\r\n      onCallBtnClick: () => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('clicked on call button');\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.log('placing call on ', this.inputField.value);\r\n      },\r\n      onClearBtnClick: () => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('clicked on clear button');\r\n\r\n        this.inputField.remove();\r\n      },\r\n    });\r\n\r\n    return keypad;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Unique id for page\r\n   *\r\n   * @returns {string}\r\n   *\r\n   */\r\n  get id(): string {\r\n    return `dialpad-${this.config.namespace}`;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * querySelect for app\r\n   *\r\n   * @returns {HTMLElement}\r\n   *\r\n   */\r\n  get element(): HTMLElement {\r\n    return document.getElementById(this.id)!;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Remove dialpad skeleton from dom\r\n   *\r\n   */\r\n  destroy(): void {\r\n    this.element.remove();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Append dialpad skeleton into parent element\r\n   *\r\n   * @param parentElement {HTMLElement}\r\n   */\r\n  build(parentElement: HTMLElement) {\r\n    parentElement.appendChild(this.skeleton());\r\n  }\r\n}\r\n"]}