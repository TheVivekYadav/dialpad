{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/buttons/buttons.ts","src/ts/components/inputs/inputs.ts","src/ts/layout/data.ts","src/ts/layout/keypad.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","value","DialpadButton","config","instance","TypeError","_classCallCheck","this","parentElement","appendChild","skeleton","get","button","document","createElement","id","classList","add","setAttribute","ariaLabel","titleElement","subtitleElement","addEventListener","onClick","title","innerText","_a","subtitle","namespace","getElementById","default","InputElement","focused","focus","querySelector","currentValue","currentCaretPosition","caretPosition","updatedValue","slice","updatedCaretPosition","count","arguments","undefined","beforeCaretValue","afterCaretValue","endIndex","input","className","autofocus","type","makeSureFocused","selectionStart","set","position","selectionEnd","activeElement","singletonInstance","KEYPAD_BUTTONS_DATA","console","log","__importDefault","mod","__esModule","buttons_1","data_1","Keypad","keypad","forEach","build","callButton","clearButton","callBtn","onCallBtnClick","clearBtn","onClearBtnClick","inputs_1","keypad_1","window","inputElement","onload","body"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import DialpadButtonConfig from './type';\n\n/**\n *\n * Dialpad Button\n *\n */\nexport default class DialpadButton {\n  // button config\n  private config: DialpadButtonConfig;\n\n  constructor(config: DialpadButtonConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * Dialpad button skeleton\n   *\n   */\n  private get skeleton(): HTMLButtonElement {\n    const button = document.createElement('button');\n    button.id = this.id;\n    button.classList.add('dialpad-btn');\n    button.setAttribute('aria-label', this.config.ariaLabel);\n\n    // append title\n    button.appendChild(this.titleElement);\n\n    // append subtitle\n    button.appendChild(this.subtitleElement);\n\n    // add click event listener\n    button.addEventListener('click', this.config.onClick);\n\n    return button;\n  }\n\n  /**\n   *\n   * Dialpad button tile element\n   *\n   */\n  private get titleElement(): HTMLElement {\n    const title = document.createElement('h1');\n    title.classList.add('dialpad-btn__title');\n    title.innerText = this.config.title;\n    return title;\n  }\n\n  /**\n   *\n   * Dialpad button subtile\n   *\n   */\n  private get subtitleElement(): HTMLElement {\n    const subtitle = document.createElement('p');\n    subtitle.classList.add('dialpad-btn__subtitle');\n    subtitle.innerText = this.config.subtitle ?? '';\n    return subtitle;\n  }\n\n  /**\n   *\n   * Unique id for dialpad button\n   *\n   */\n  get id() {\n    return `dialpad-btn-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Dialpad button query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLButtonElement {\n    return document.getElementById(this.id)! as HTMLButtonElement;\n  }\n\n  /**\n   *\n   * Appends dialpad button to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n}\n","/**\n *\n * Input Element\n *\n */\nexport default class InputElement {\n  // singleton instance\n  // eslint-disable-next-line no-use-before-define\n  private static singletonInstance: InputElement;\n\n  /**\n   *\n   * Make constructor private to prevent direct\n   * construction calls with the `new` operator.\n   *\n   */\n  // eslint-disable-next-line no-useless-constructor, no-empty-function\n  private constructor() {}\n\n  /**\n   *\n   *  The static method that controls the access to the singleton instance.\n   *\n   */\n  static get instance() {\n    // if singleton instance is not initialized yet,\n    // create new instance assign to singleton instabce\n    if (!InputElement.singletonInstance) {\n      InputElement.singletonInstance = new InputElement();\n    }\n\n    return InputElement.singletonInstance;\n  }\n\n  /**\n   *\n   * input element skeleton\n   *\n   */\n  private get skeleton(): HTMLInputElement {\n    const input = document.createElement('input');\n    input.className = this.className;\n    input.autofocus = true;\n    input.type = 'text';\n    return input;\n  }\n\n  /**\n   *\n   * css class name for input element\n   *\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get className() {\n    return 'input-element';\n  }\n\n  /**\n   *\n   * Input element query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLInputElement {\n    return document.querySelector(`.${this.className}`)! as HTMLInputElement;\n  }\n\n  /**\n   *\n   * Appends input element to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n\n  /**\n   *\n   * Make sure input element is focused\n   *\n   */\n  makeSureFocused() {\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n\n  /**\n   *\n   * Get input element caret position\n   *\n   */\n  get caretPosition(): number {\n    // make sure the input is focused\n    this.makeSureFocused();\n    return this.querySelector.selectionStart!;\n  }\n\n  /**\n   *\n   * Set input element caret position\n   *\n   * @param position - desired caret position index value\n   *\n   */\n  set caretPosition(position: number) {\n    // make sure the input is focused\n    this.makeSureFocused();\n\n    // set selection\n    this.querySelector.selectionStart = position;\n    this.querySelector.selectionEnd = position;\n  }\n\n  /**\n   *\n   * To check whether the input element is focused or not\n   *\n   */\n  get focused(): boolean {\n    return document.activeElement === this.querySelector;\n  }\n\n  /**\n   *\n   * To get input element value\n   *\n   */\n  get value(): string {\n    return this.querySelector.value;\n  }\n\n  /**\n   *\n   * To set input element value\n   *\n   * @param value - The value to set\n   *\n   */\n  set value(value: string) {\n    this.querySelector.value = value;\n  }\n\n  /**\n   *\n   * Focus input element\n   *\n   */\n  focus() {\n    this.querySelector.focus();\n  }\n\n  /**\n   *\n   * Insert a value at the caret position\n   *\n   * @param value - The value to be inserted\n   *\n   */\n  // eslint-disable-next-line class-methods-use-this\n  insertValue(value: string) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const updatedValue =\n      currentValue.slice(0, currentCaretPosition) +\n      value +\n      currentValue.slice(currentCaretPosition);\n    const updatedCaretPosition = currentCaretPosition + value.length;\n\n    // update state\n    this.value = updatedValue;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * Remove characters from the value starting at the caret position\n   *\n   * @param count - The number of characters, default value is 1\n   *\n   */\n  remove(count: number = 1) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const beforeCaretValue = currentValue.slice(0, currentCaretPosition);\n    const afterCaretValue = currentValue.slice(currentCaretPosition);\n    const endIndex = beforeCaretValue.length - count;\n    const updatedValue = beforeCaretValue.slice(0, endIndex) + afterCaretValue;\n    const updatedCaretPosition = currentCaretPosition - count;\n\n    // update state\n    this.value = updatedValue;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * Clear the value of input element\n   *\n   */\n  clear() {\n    this.value = '';\n    this.focus();\n  }\n}\n","import DialpadButtonConfig from '../components/buttons/type';\n\n/**\n *\n * Keypad buttons data\n *\n */\nconst KEYPAD_BUTTONS_DATA: Array<DialpadButtonConfig> = [\n  {\n    namespace: 'one',\n    ariaLabel: 'One',\n    title: '1',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 1');\n    },\n  },\n  {\n    namespace: 'two',\n    ariaLabel: 'Two',\n    title: '2',\n    subtitle: 'ABC',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 2');\n    },\n  },\n  {\n    namespace: 'three',\n    ariaLabel: 'Three',\n    title: '3',\n    subtitle: 'DEF',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 3');\n    },\n  },\n  {\n    namespace: 'four',\n    ariaLabel: 'Four',\n    title: '4',\n    subtitle: 'GHI',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 4');\n    },\n  },\n  {\n    namespace: 'five',\n    ariaLabel: 'Five',\n    title: '5',\n    subtitle: 'JKL',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 5');\n    },\n  },\n  {\n    namespace: 'six',\n    ariaLabel: 'Six',\n    title: '6',\n    subtitle: 'MNO',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 6');\n    },\n  },\n  {\n    namespace: 'seven',\n    ariaLabel: 'Seven',\n    title: '7',\n    subtitle: 'PQRS',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 7');\n    },\n  },\n  {\n    namespace: 'eight',\n    ariaLabel: 'Eight',\n    title: '8',\n    subtitle: 'TUV',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 8');\n    },\n  },\n  {\n    namespace: 'nine',\n    ariaLabel: 'Nine',\n    title: '9',\n    subtitle: 'WXYZ',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 9');\n    },\n  },\n  {\n    namespace: 'star',\n    ariaLabel: 'Star',\n    title: '*',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on *');\n    },\n  },\n  {\n    namespace: 'zero',\n    ariaLabel: 'Zero',\n    title: '0',\n    subtitle: '+',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on 0');\n    },\n  },\n  {\n    namespace: 'hash',\n    ariaLabel: 'Hash',\n    title: '#',\n    onClick: () => {\n      // eslint-disable-next-line no-console\n      console.log('clicked on #');\n    },\n  },\n];\n\nexport default KEYPAD_BUTTONS_DATA;\n","import DialpadButton from '../components/buttons/buttons';\nimport DialpadButtonConfig from '../components/buttons/type';\nimport KEYPAD_BUTTONS_DATA from './data';\nimport KeypadConfig from './type';\n\n/**\n *\n * Keypad\n *\n */\nexport default class Keypad {\n  // keypad config\n  private config: KeypadConfig;\n\n  constructor(config: KeypadConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * Keypad skeleton\n   *\n   */\n  private get skeleton(): HTMLDivElement {\n    const keypad = document.createElement('div');\n    keypad.id = this.id;\n    keypad.classList.add('keypad');\n\n    // append digits buttons\n    KEYPAD_BUTTONS_DATA.forEach((config: DialpadButtonConfig) => {\n      // create button instance\n      const btn = new DialpadButton(config);\n\n      // append button\n      btn.build(keypad);\n    });\n\n    // append dummy element\n    keypad.appendChild(document.createElement('span'));\n\n    // append call button\n    keypad.appendChild(this.callButton);\n\n    // append clear button\n    keypad.appendChild(this.clearButton);\n\n    return keypad;\n  }\n\n  /**\n   *\n   * Keypad call button\n   *\n   */\n  private get callButton(): HTMLElement {\n    const callBtn = document.createElement('button');\n    callBtn.classList.add('keypad__call-btn');\n    callBtn.setAttribute('aria-label', 'call button');\n    callBtn.innerText = 'Call';\n\n    // add click event listener\n    callBtn.addEventListener('click', this.config.onCallBtnClick);\n\n    return callBtn;\n  }\n\n  /**\n   *\n   * Keypad clear button\n   *\n   */\n  private get clearButton(): HTMLElement {\n    const clearBtn = document.createElement('button');\n    clearBtn.classList.add('keypad__clear-btn');\n    clearBtn.setAttribute('aria-label', 'clear button');\n    clearBtn.innerText = 'Clear';\n\n    // add click event listener\n    clearBtn.addEventListener('click', this.config.onClearBtnClick);\n\n    return clearBtn;\n  }\n\n  /**\n   *\n   * Unique id for keypad\n   *\n   */\n  get id() {\n    return `keypad-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Keypad query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLDivElement {\n    return document.getElementById(this.id)! as HTMLDivElement;\n  }\n\n  /**\n   *\n   * Appends keypad to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n}\n","import InputElement from './components/inputs/inputs';\r\nimport Keypad from './layout/keypad';\r\n\r\n// extend type\r\ndeclare global {\r\n  // eslint-disable-next-line no-unused-vars\r\n  interface Window {\r\n    inputElement: InputElement;\r\n  }\r\n}\r\n\r\n// expose input element instance\r\nwindow.inputElement = InputElement.instance;\r\n\r\nwindow.onload = () => {\r\n  // eslint-disable-next-line no-console\r\n  console.log('dialpad');\r\n\r\n  // append input element\r\n  InputElement.instance.build(document.body);\r\n\r\n  // create keypad instance\r\n  const keypad = new Keypad({\r\n    namespace: 'dialpad',\r\n    onCallBtnClick: () => {\r\n      // eslint-disable-next-line no-console\r\n      console.log('clicked on call button');\r\n    },\r\n    onClearBtnClick: () => {\r\n      // eslint-disable-next-line no-console\r\n      console.log('clicked on clear button');\r\n    },\r\n  });\r\n\r\n  // build keypad\r\n  keypad.build(document.body);\r\n};\r\n"]}