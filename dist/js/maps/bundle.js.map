{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/buttons/buttons.ts","src/ts/components/inputs/inputs.ts","src/ts/layout/data.ts","src/ts/layout/keypad.ts","src/ts/main.ts","src/ts/pages/dialpad.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","value","DialpadButton","config","instance","TypeError","_classCallCheck","this","parentElement","appendChild","skeleton","get","_this","button","document","createElement","id","classList","add","setAttribute","ariaLabel","titleElement","subtitleElement","addEventListener","onClick","title","innerText","_a","subtitle","namespace","getElementById","default","InputElement","focused","focus","querySelector","currentValue","currentCaretPosition","caretPosition","updatedValue","slice","updatedCaretPosition","count","arguments","undefined","beforeCaretValue","afterCaretValue","endIndex","input","className","autofocus","type","makeSureFocused","selectionStart","set","position","selectionEnd","activeElement","singletonInstance","__importDefault","mod","__esModule","buttons_1","data_1","Keypad","keypad","forEach","onKeypadButtonClick","build","callButton","clearButton","callBtn","onCallBtnClick","clearBtn","onClearBtnClick","inputs_1","dialpad_1","window","inputElement","onload","body","keypad_1","Dialpad","dialpad","inputField","keypadLayout","element","remove","console","log","insertValue"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import DialpadButtonConfig from './type';\n\n/**\n *\n * Dialpad Button\n *\n */\nexport default class DialpadButton {\n  // button config\n  private config: DialpadButtonConfig;\n\n  constructor(config: DialpadButtonConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * Dialpad button skeleton\n   *\n   */\n  private get skeleton(): HTMLButtonElement {\n    const button = document.createElement('button');\n    button.id = this.id;\n    button.classList.add('dialpad-btn');\n    button.setAttribute('aria-label', this.config.ariaLabel);\n\n    // append title\n    button.appendChild(this.titleElement);\n\n    // append subtitle\n    button.appendChild(this.subtitleElement);\n\n    // add click event listener\n    button.addEventListener('click', () => {\n      this.config.onClick(this.config.title);\n    });\n\n    return button;\n  }\n\n  /**\n   *\n   * Dialpad button tile element\n   *\n   */\n  private get titleElement(): HTMLElement {\n    const title = document.createElement('h1');\n    title.classList.add('dialpad-btn__title');\n    title.innerText = this.config.title;\n    return title;\n  }\n\n  /**\n   *\n   * Dialpad button subtile\n   *\n   */\n  private get subtitleElement(): HTMLElement {\n    const subtitle = document.createElement('p');\n    subtitle.classList.add('dialpad-btn__subtitle');\n    subtitle.innerText = this.config.subtitle ?? '';\n    return subtitle;\n  }\n\n  /**\n   *\n   * Unique id for dialpad button\n   *\n   */\n  get id() {\n    return `dialpad-btn-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Dialpad button query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLButtonElement {\n    return document.getElementById(this.id)! as HTMLButtonElement;\n  }\n\n  /**\n   *\n   * Appends dialpad button to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n}\n","/**\r\n *\r\n * Input Element\r\n *\r\n */\r\nexport default class InputElement {\r\n  // singleton instance\r\n  // eslint-disable-next-line no-use-before-define\r\n  private static singletonInstance: InputElement;\r\n\r\n  /**\r\n   *\r\n   * Make constructor private to prevent direct\r\n   * construction calls with the `new` operator.\r\n   *\r\n   */\r\n  // eslint-disable-next-line no-useless-constructor, no-empty-function\r\n  private constructor() {}\r\n\r\n  /**\r\n   *\r\n   *  The static method that controls the access to the singleton instance.\r\n   *\r\n   */\r\n  static get instance() {\r\n    // if singleton instance is not initialized yet,\r\n    // create new instance assign to singleton instabce\r\n    if (!InputElement.singletonInstance) {\r\n      InputElement.singletonInstance = new InputElement();\r\n    }\r\n\r\n    return InputElement.singletonInstance;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * input element skeleton\r\n   *\r\n   */\r\n  private get skeleton(): HTMLInputElement {\r\n    const input = document.createElement('input');\r\n    input.className = this.className;\r\n    input.autofocus = true;\r\n    input.type = 'text';\r\n    return input;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * css class name for input element\r\n   *\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  get className() {\r\n    return 'input-element';\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Input element query selector for dom manipulation\r\n   *\r\n   */\r\n  get querySelector(): HTMLInputElement {\r\n    return document.querySelector(`.${this.className}`)! as HTMLInputElement;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Appends input element to a specified parent element.\r\n   *\r\n   * @param parentElement\r\n   *\r\n   */\r\n  build(parentElement: HTMLElement) {\r\n    parentElement.appendChild(this.skeleton);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Make sure input element is focused\r\n   *\r\n   */\r\n  makeSureFocused() {\r\n    if (!this.focused) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Get input element caret position\r\n   *\r\n   */\r\n  get caretPosition(): number {\r\n    // make sure the input is focused\r\n    this.makeSureFocused();\r\n    return this.querySelector.selectionStart!;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Set input element caret position\r\n   *\r\n   * @param position - desired caret position index value\r\n   *\r\n   */\r\n  set caretPosition(position: number) {\r\n    // make sure the input is focused\r\n    this.makeSureFocused();\r\n\r\n    // set selection\r\n    this.querySelector.selectionStart = position;\r\n    this.querySelector.selectionEnd = position;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * To check whether the input element is focused or not\r\n   *\r\n   */\r\n  get focused(): boolean {\r\n    return document.activeElement === this.querySelector;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * To get input element value\r\n   *\r\n   */\r\n  get value(): string {\r\n    return this.querySelector.value;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * To set input element value\r\n   *\r\n   * @param value - The value to set\r\n   *\r\n   */\r\n  set value(value: string) {\r\n    this.querySelector.value = value;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Focus input element\r\n   *\r\n   */\r\n  focus() {\r\n    this.querySelector.focus();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Insert a value at the caret position\r\n   *\r\n   * @param value - The value to be inserted\r\n   *\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  insertValue(value: string) {\r\n    // capture current state\r\n    const currentValue = this.value;\r\n    const currentCaretPosition = this.caretPosition;\r\n\r\n    // prepare updated state\r\n    const updatedValue =\r\n      currentValue.slice(0, currentCaretPosition) +\r\n      value +\r\n      currentValue.slice(currentCaretPosition);\r\n    const updatedCaretPosition = currentCaretPosition + value.length;\r\n\r\n    // update state\r\n    this.value = updatedValue;\r\n    this.caretPosition = updatedCaretPosition;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Remove characters from the value starting at the caret position\r\n   *\r\n   * @param count - The number of characters, default value is 1\r\n   *\r\n   */\r\n  remove(count: number = 1) {\r\n    // capture current state\r\n    const currentValue = this.value;\r\n    const currentCaretPosition = this.caretPosition;\r\n\r\n    // prepare updated state\r\n    const beforeCaretValue = currentValue.slice(0, currentCaretPosition);\r\n    const afterCaretValue = currentValue.slice(currentCaretPosition);\r\n    const endIndex = beforeCaretValue.length - count;\r\n    const updatedValue = beforeCaretValue.slice(0, endIndex) + afterCaretValue;\r\n    const updatedCaretPosition = currentCaretPosition - count;\r\n\r\n    // update state\r\n    this.value = updatedValue;\r\n    this.caretPosition = updatedCaretPosition;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Clear the value of input element\r\n   *\r\n   */\r\n  clear() {\r\n    this.value = '';\r\n    this.focus();\r\n  }\r\n}\r\n","import { KeypadButtonData } from './type';\n\n/**\n *\n * Keypad buttons data\n *\n */\nconst KEYPAD_BUTTONS_DATA: Array<KeypadButtonData> = [\n  {\n    namespace: 'one',\n    ariaLabel: 'One',\n    title: '1',\n  },\n  {\n    namespace: 'two',\n    ariaLabel: 'Two',\n    title: '2',\n    subtitle: 'ABC',\n  },\n  {\n    namespace: 'three',\n    ariaLabel: 'Three',\n    title: '3',\n    subtitle: 'DEF',\n  },\n  {\n    namespace: 'four',\n    ariaLabel: 'Four',\n    title: '4',\n    subtitle: 'GHI',\n  },\n  {\n    namespace: 'five',\n    ariaLabel: 'Five',\n    title: '5',\n    subtitle: 'JKL',\n  },\n  {\n    namespace: 'six',\n    ariaLabel: 'Six',\n    title: '6',\n    subtitle: 'MNO',\n  },\n  {\n    namespace: 'seven',\n    ariaLabel: 'Seven',\n    title: '7',\n    subtitle: 'PQRS',\n  },\n  {\n    namespace: 'eight',\n    ariaLabel: 'Eight',\n    title: '8',\n    subtitle: 'TUV',\n  },\n  {\n    namespace: 'nine',\n    ariaLabel: 'Nine',\n    title: '9',\n    subtitle: 'WXYZ',\n  },\n  {\n    namespace: 'star',\n    ariaLabel: 'Star',\n    title: '*',\n  },\n  {\n    namespace: 'zero',\n    ariaLabel: 'Zero',\n    title: '0',\n    subtitle: '+',\n  },\n  {\n    namespace: 'hash',\n    ariaLabel: 'Hash',\n    title: '#',\n  },\n];\n\nexport default KEYPAD_BUTTONS_DATA;\n","import DialpadButton from '../components/buttons/buttons';\nimport KEYPAD_BUTTONS_DATA from './data';\nimport { KeypadButtonData, KeypadConfig } from './type';\n\n/**\n *\n * Keypad\n *\n */\nexport default class Keypad {\n  // keypad config\n  private config: KeypadConfig;\n\n  constructor(config: KeypadConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * Keypad skeleton\n   *\n   */\n  private get skeleton(): HTMLDivElement {\n    const keypad = document.createElement('div');\n    keypad.id = this.id;\n    keypad.classList.add('keypad');\n\n    // append digits buttons\n    KEYPAD_BUTTONS_DATA.forEach((config: KeypadButtonData) => {\n      // create button instance\n      const btn = new DialpadButton({\n        namespace: config.namespace,\n        ariaLabel: config.ariaLabel,\n        title: config.title,\n        onClick: this.config.onKeypadButtonClick,\n      });\n\n      // append button\n      btn.build(keypad);\n    });\n\n    // append dummy element\n    keypad.appendChild(document.createElement('span'));\n\n    // append call button\n    keypad.appendChild(this.callButton);\n\n    // append clear button\n    keypad.appendChild(this.clearButton);\n\n    return keypad;\n  }\n\n  /**\n   *\n   * Keypad call button\n   *\n   */\n  private get callButton(): HTMLElement {\n    const callBtn = document.createElement('button');\n    callBtn.classList.add('keypad__call-btn');\n    callBtn.setAttribute('aria-label', 'call button');\n    callBtn.innerText = 'Call';\n\n    // add click event listener\n    callBtn.addEventListener('click', this.config.onCallBtnClick);\n\n    return callBtn;\n  }\n\n  /**\n   *\n   * Keypad clear button\n   *\n   */\n  private get clearButton(): HTMLElement {\n    const clearBtn = document.createElement('button');\n    clearBtn.classList.add('keypad__clear-btn');\n    clearBtn.setAttribute('aria-label', 'clear button');\n    clearBtn.innerText = 'Clear';\n\n    // add click event listener\n    clearBtn.addEventListener('click', this.config.onClearBtnClick);\n\n    return clearBtn;\n  }\n\n  /**\n   *\n   * Unique id for keypad\n   *\n   */\n  get id() {\n    return `keypad-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Keypad query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLDivElement {\n    return document.getElementById(this.id)! as HTMLDivElement;\n  }\n\n  /**\n   *\n   * Appends keypad to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n}\n","import InputElement from './components/inputs/inputs';\r\nimport Dialpad from './pages/dialpad';\r\n\r\n// extend type\r\ndeclare global {\r\n  // eslint-disable-next-line no-unused-vars\r\n  interface Window {\r\n    inputElement: InputElement;\r\n  }\r\n}\r\n\r\n// expose input element instance\r\nwindow.inputElement = InputElement.instance;\r\n\r\nwindow.onload = () => {\r\n  // create dialpad instance\r\n  const dialpad = new Dialpad({ namespace: 'demo' });\r\n\r\n  // build dialpad\r\n  dialpad.build(document.body);\r\n};\r\n","import InputElement from '../components/inputs/inputs';\nimport Keypad from '../layout/keypad';\nimport DialpadConfig from './types';\n\n/**\n *\n * Dialpad Page\n *\n */\nexport default class Dialpad {\n  // dialpad configuration\n  private config: DialpadConfig;\n\n  constructor(config: DialpadConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * page skeleton\n   *\n   * @returns {HTMLDivElement}\n   *\n   */\n  private skeleton(): HTMLElement {\n    const dialpad = document.createElement('section');\n    dialpad.id = this.id;\n    dialpad.className = 'dialpad';\n\n    // build input field\n    this.inputField.build(dialpad);\n\n    // build keypad layout\n    this.keypadLayout.build(dialpad);\n\n    return dialpad;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private get inputField() {\n    return InputElement.instance;\n  }\n\n  private get keypadLayout() {\n    const keypad = new Keypad({\n      namespace: this.config.namespace,\n      onKeypadButtonClick: (value: string) => {\n        // eslint-disable-next-line no-console\n        console.log('clicked on button', value);\n\n        // insert value\n        this.inputField.insertValue(value);\n      },\n      onCallBtnClick: () => {\n        // eslint-disable-next-line no-console\n        console.log('clicked on call button');\n\n        // eslint-disable-next-line no-console\n        console.log('placing call on ', this.inputField.value);\n      },\n      onClearBtnClick: () => {\n        // eslint-disable-next-line no-console\n        console.log('clicked on clear button');\n\n        this.inputField.remove();\n      },\n    });\n\n    return keypad;\n  }\n\n  /**\n   *\n   * Unique id for page\n   *\n   * @returns {string}\n   *\n   */\n  get id(): string {\n    return `dialpad-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * querySelect for app\n   *\n   * @returns {HTMLElement}\n   *\n   */\n  get element(): HTMLElement {\n    return document.getElementById(this.id)!;\n  }\n\n  /**\n   *\n   * Remove dialpad skeleton from dom\n   *\n   */\n  destroy(): void {\n    this.element.remove();\n  }\n\n  /**\n   *\n   * Append dialpad skeleton into parent element\n   *\n   * @param parentElement {HTMLElement}\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton());\n  }\n}\n"]}