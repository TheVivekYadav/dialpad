{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/components/buttons/buttons.ts","src/ts/components/forms/inputs.ts","src/ts/layout/data.ts","src/ts/layout/keypad.ts","src/ts/main.ts","src/ts/pages/dialpad.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","value","DialpadButton","config","instance","TypeError","_classCallCheck","this","parentElement","appendChild","skeleton","get","_this","button","document","createElement","id","classList","add","setAttribute","ariaLabel","titleElement","subtitleElement","addEventListener","onClick","title","innerText","_a","subtitle","namespace","getElementById","default","InputElement","focused","focus","querySelector","currentValue","currentCaretPosition","caretPosition","updatedValue","slice","updatedCaretPosition","count","arguments","undefined","beforeCaretValue","afterCaretValue","endIndex","inputEventHandler","caretPositionBeforeRemoveUnwantedChars","updatedValueAfterRemoveUnwantedChars","replace","validation","console","log","onValueEmpty","onValueNonEmpty","input","className","name","type","autofocus","inputMode","autocomplete","bind","makeSureFocused","selectionStart","set","position","selectionEnd","activeElement","__importDefault","mod","__esModule","buttons_1","data_1","Keypad","iconName","iconElement","backspaceButtonElement","disabled","keypad","forEach","onKeypadButtonClick","build","callButton","backspaceButton","callBtn","getMaterialIcon","onCallBtnClick","backspaceBtn","onClearBtnClick","dialpad_1","window","onload","body","inputs_1","keypad_1","Dialpad","dialpad","inputFieldLayout","keypadLayout","element","remove","inputField","disableBackspaceButton","enableBackspaceButton","_this2","insertValue","removeValue"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import DialpadButtonConfig from './type';\r\n\r\n/**\r\n *\r\n * Dialpad Button\r\n *\r\n */\r\nexport default class DialpadButton {\r\n  // button config\r\n  private config: DialpadButtonConfig;\r\n\r\n  constructor(config: DialpadButtonConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button skeleton\r\n   *\r\n   */\r\n  private get skeleton(): HTMLButtonElement {\r\n    const button = document.createElement('button');\r\n    button.id = this.id;\r\n    button.classList.add('dialpad-btn');\r\n    button.setAttribute('aria-label', this.config.ariaLabel);\r\n\r\n    // append title\r\n    button.appendChild(this.titleElement);\r\n\r\n    // append subtitle\r\n    button.appendChild(this.subtitleElement);\r\n\r\n    // add click event listener\r\n    button.addEventListener('click', () => {\r\n      this.config.onClick(this.config.title);\r\n    });\r\n\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button tile element\r\n   *\r\n   */\r\n  private get titleElement(): HTMLElement {\r\n    const title = document.createElement('h1');\r\n    title.classList.add('dialpad-btn__title');\r\n    title.innerText = this.config.title;\r\n    return title;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button subtile\r\n   *\r\n   */\r\n  private get subtitleElement(): HTMLElement {\r\n    const subtitle = document.createElement('p');\r\n    subtitle.classList.add('dialpad-btn__subtitle');\r\n    subtitle.innerText = this.config.subtitle ?? '';\r\n    return subtitle;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Unique id for dialpad button\r\n   *\r\n   */\r\n  get id() {\r\n    return `dialpad-btn-${this.config.namespace}`;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Dialpad button query selector for dom manipulation\r\n   *\r\n   */\r\n  get querySelector(): HTMLButtonElement {\r\n    return document.getElementById(this.id)! as HTMLButtonElement;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Appends dialpad button to a specified parent element.\r\n   *\r\n   * @param parentElement\r\n   *\r\n   */\r\n  build(parentElement: HTMLElement) {\r\n    parentElement.appendChild(this.skeleton);\r\n  }\r\n}\r\n","import { InputElementConfig } from './types';\n\n/**\n *\n * Input Element\n *\n */\nexport default class InputElement {\n  // input element config\n  private config: InputElementConfig;\n\n  constructor(config: InputElementConfig) {\n    this.config = config;\n  }\n\n  /**\n   *\n   * input element skeleton\n   *\n   */\n  private get skeleton(): HTMLInputElement {\n    const input = document.createElement('input');\n    input.id = this.id;\n    input.className = 'input-element';\n    input.name = 'number';\n    input.type = 'text';\n    input.autofocus = true;\n    input.inputMode = 'none';\n    input.autocomplete = 'off';\n\n    // add input event listener\n    input.addEventListener('input', this.inputEventHandler.bind(this));\n\n    return input;\n  }\n\n  /**\n   *\n   * Input element query selector for dom manipulation\n   *\n   */\n  get querySelector(): HTMLInputElement {\n    return document.getElementById(this.id) as HTMLInputElement;\n  }\n\n  /**\n   *\n   * Unique id for input element\n   *\n   * @returns {string}\n   *\n   */\n  get id(): string {\n    return `input-${this.config.namespace}`;\n  }\n\n  /**\n   *\n   * Appends input element to a specified parent element.\n   *\n   * @param parentElement\n   *\n   */\n  build(parentElement: HTMLElement) {\n    parentElement.appendChild(this.skeleton);\n  }\n\n  /**\n   *\n   * Make sure input element is focused\n   *\n   */\n  makeSureFocused() {\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n\n  /**\n   *\n   * Get input element caret position\n   *\n   */\n  get caretPosition(): number {\n    // make sure the input is focused\n    this.makeSureFocused();\n    return this.querySelector.selectionStart!;\n  }\n\n  /**\n   *\n   * Set input element caret position\n   *\n   * @param position - desired caret position index value\n   *\n   */\n  set caretPosition(position: number) {\n    // make sure the input is focused\n    this.makeSureFocused();\n\n    // set selection\n    this.querySelector.selectionStart = position;\n    this.querySelector.selectionEnd = position;\n  }\n\n  /**\n   *\n   * To check whether the input element is focused or not\n   *\n   */\n  get focused(): boolean {\n    return document.activeElement === this.querySelector;\n  }\n\n  /**\n   *\n   * To get input element value\n   *\n   */\n  get value(): string {\n    return this.querySelector.value;\n  }\n\n  /**\n   *\n   * To set input element value\n   *\n   * @param value - The value to set\n   *\n   */\n  set value(value: string) {\n    this.querySelector.value = value;\n  }\n\n  /**\n   *\n   * Focus input element\n   *\n   */\n  focus() {\n    this.querySelector.focus();\n  }\n\n  /**\n   *\n   * Insert a value at the caret position\n   *\n   * @param value - The value to be inserted\n   *\n   */\n  // eslint-disable-next-line class-methods-use-this\n  insertValue(value: string) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const updatedValue =\n      currentValue.slice(0, currentCaretPosition) +\n      value +\n      currentValue.slice(currentCaretPosition);\n    const updatedCaretPosition = currentCaretPosition + value.length;\n\n    // update state\n    this.value = updatedValue;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * Remove characters from the value starting at the caret position\n   *\n   * @param count - The number of characters, default value is 1\n   *\n   */\n  removeValue(count: number = 1) {\n    // capture current state\n    const currentValue = this.value;\n    const currentCaretPosition = this.caretPosition;\n\n    // prepare updated state\n    const beforeCaretValue = currentValue.slice(0, currentCaretPosition);\n\n    // if before caret value is empty do nothing\n    if (beforeCaretValue !== '') {\n      const afterCaretValue = currentValue.slice(currentCaretPosition);\n      const endIndex = beforeCaretValue.length - count;\n      const updatedValue =\n        beforeCaretValue.slice(0, endIndex) + afterCaretValue;\n      const updatedCaretPosition = currentCaretPosition - count;\n\n      // update state\n      this.value = updatedValue;\n      this.caretPosition = updatedCaretPosition;\n\n      // check empty or not\n      this.inputEventHandler();\n    }\n  }\n\n  /**\n   *\n   * Clear the value of input element\n   *\n   */\n  clear() {\n    this.value = '';\n    this.focus();\n  }\n\n  /**\n   *\n   * Remove unwanted symbols and allow only digits, +, *, and #\n   *\n   */\n  validation() {\n    // prepare updated state\n    const caretPositionBeforeRemoveUnwantedChars = this.caretPosition;\n    const updatedValueAfterRemoveUnwantedChars = this.value.replace(\n      /[^0-9+*#]/g,\n      ''\n    );\n    const updatedCaretPosition =\n      caretPositionBeforeRemoveUnwantedChars +\n      updatedValueAfterRemoveUnwantedChars.length -\n      this.value.length;\n\n    // update state\n    this.value = updatedValueAfterRemoveUnwantedChars;\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  /**\n   *\n   * `input` event handler\n   *\n   */\n  inputEventHandler() {\n    // Remove unwanted symbols and allow only digits, +, *, and #\n    this.validation();\n\n    // check whether the value is empty or not, and act accordingly.\n    if (this.value === '') {\n      // eslint-disable-next-line no-console\n      console.log('value empty');\n      this.config.onValueEmpty();\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('value non empty');\n      this.config.onValueNonEmpty();\n    }\n  }\n}\n","import { KeypadButtonData } from './types';\r\n\r\n/**\r\n *\r\n * Keypad buttons data\r\n *\r\n */\r\nconst KEYPAD_BUTTONS_DATA: Array<KeypadButtonData> = [\r\n  {\r\n    namespace: 'one',\r\n    ariaLabel: 'One',\r\n    title: '1',\r\n  },\r\n  {\r\n    namespace: 'two',\r\n    ariaLabel: 'Two',\r\n    title: '2',\r\n    subtitle: 'ABC',\r\n  },\r\n  {\r\n    namespace: 'three',\r\n    ariaLabel: 'Three',\r\n    title: '3',\r\n    subtitle: 'DEF',\r\n  },\r\n  {\r\n    namespace: 'four',\r\n    ariaLabel: 'Four',\r\n    title: '4',\r\n    subtitle: 'GHI',\r\n  },\r\n  {\r\n    namespace: 'five',\r\n    ariaLabel: 'Five',\r\n    title: '5',\r\n    subtitle: 'JKL',\r\n  },\r\n  {\r\n    namespace: 'six',\r\n    ariaLabel: 'Six',\r\n    title: '6',\r\n    subtitle: 'MNO',\r\n  },\r\n  {\r\n    namespace: 'seven',\r\n    ariaLabel: 'Seven',\r\n    title: '7',\r\n    subtitle: 'PQRS',\r\n  },\r\n  {\r\n    namespace: 'eight',\r\n    ariaLabel: 'Eight',\r\n    title: '8',\r\n    subtitle: 'TUV',\r\n  },\r\n  {\r\n    namespace: 'nine',\r\n    ariaLabel: 'Nine',\r\n    title: '9',\r\n    subtitle: 'WXYZ',\r\n  },\r\n  {\r\n    namespace: 'star',\r\n    ariaLabel: 'Star',\r\n    title: '*',\r\n  },\r\n  {\r\n    namespace: 'zero',\r\n    ariaLabel: 'Zero',\r\n    title: '0',\r\n    subtitle: '+',\r\n  },\r\n  {\r\n    namespace: 'hash',\r\n    ariaLabel: 'Hash',\r\n    title: '#',\r\n  },\r\n];\r\n\r\nexport default KEYPAD_BUTTONS_DATA;\r\n","import DialpadButton from '../components/buttons/buttons';\r\nimport KEYPAD_BUTTONS_DATA from './data';\r\nimport { KeypadButtonData, KeypadConfig } from './types';\r\n\r\n/**\r\n *\r\n * Keypad\r\n *\r\n */\r\nexport default class Keypad {\r\n  // keypad config\r\n  private config: KeypadConfig;\r\n\r\n  constructor(config: KeypadConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Keypad skeleton\r\n   *\r\n   */\r\n  private get skeleton(): HTMLDivElement {\r\n    const keypad = document.createElement('div');\r\n    keypad.id = this.id;\r\n    keypad.classList.add('keypad');\r\n\r\n    // append digits buttons\r\n    KEYPAD_BUTTONS_DATA.forEach((config: KeypadButtonData) => {\r\n      // create button instance\r\n      const btn = new DialpadButton({\r\n        namespace: config.namespace,\r\n        ariaLabel: config.ariaLabel,\r\n        title: config.title,\r\n        subtitle: config.subtitle,\r\n        onClick: this.config.onKeypadButtonClick,\r\n      });\r\n\r\n      // append button\r\n      btn.build(keypad);\r\n    });\r\n\r\n    // append dummy element\r\n    keypad.appendChild(document.createElement('span'));\r\n\r\n    // append call button\r\n    keypad.appendChild(this.callButton);\r\n\r\n    // append backspace button\r\n    keypad.appendChild(this.backspaceButton);\r\n\r\n    return keypad;\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  getMaterialIcon(iconName: string) {\r\n    const iconElement = document.createElement('span');\r\n    iconElement.className = 'material-symbols-outlined';\r\n    iconElement.innerText = iconName;\r\n    return iconElement;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Keypad call button\r\n   *\r\n   */\r\n  private get callButton(): HTMLElement {\r\n    const callBtn = document.createElement('button');\r\n    callBtn.classList.add('keypad__call-btn');\r\n    callBtn.setAttribute('aria-label', 'call button');\r\n\r\n    // append call icon\r\n    callBtn.appendChild(this.getMaterialIcon('call'));\r\n\r\n    // add click event listener\r\n    callBtn.addEventListener('click', this.config.onCallBtnClick);\r\n\r\n    return callBtn;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Keypad backspace button\r\n   *\r\n   */\r\n  private get backspaceButton(): HTMLElement {\r\n    const backspaceBtn = document.createElement('button');\r\n    backspaceBtn.classList.add('keypad__backspace-btn');\r\n    backspaceBtn.setAttribute('aria-label', 'Backspace button');\r\n    backspaceBtn.disabled = true;\r\n\r\n    // append backspace icon\r\n    backspaceBtn.appendChild(this.getMaterialIcon('backspace'));\r\n\r\n    // add click event listener\r\n    backspaceBtn.addEventListener('click', this.config.onClearBtnClick);\r\n\r\n    return backspaceBtn;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * To get backspace button element for dom manipulations\r\n   *\r\n   */\r\n  get backspaceButtonElement(): HTMLButtonElement {\r\n    return this.querySelector.querySelector(\r\n      '.keypad__backspace-btn'\r\n    ) as HTMLButtonElement;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Unique id for keypad\r\n   *\r\n   */\r\n  get id() {\r\n    return `keypad-${this.config.namespace}`;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Keypad query selector for dom manipulation\r\n   *\r\n   */\r\n  get querySelector(): HTMLDivElement {\r\n    return document.getElementById(this.id)! as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Appends keypad to a specified parent element.\r\n   *\r\n   * @param parentElement\r\n   *\r\n   */\r\n  build(parentElement: HTMLElement) {\r\n    parentElement.appendChild(this.skeleton);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Enable backspace button\r\n   *\r\n   */\r\n  enableBackspaceButton() {\r\n    this.backspaceButtonElement.disabled = false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Disable backspace button\r\n   *\r\n   */\r\n  disableBackspaceButton() {\r\n    this.backspaceButtonElement.disabled = true;\r\n  }\r\n}\r\n","import Dialpad from './pages/dialpad';\r\n\r\nwindow.onload = () => {\r\n  // create dialpad instance\r\n  const dialpad = new Dialpad({ namespace: 'demo' });\r\n\r\n  // build dialpad\r\n  dialpad.build(document.body);\r\n};\r\n","import InputElement from '../components/forms/inputs';\r\nimport Keypad from '../layout/keypad';\r\nimport DialpadConfig from './types';\r\n\r\n/**\r\n *\r\n * Dialpad Page\r\n *\r\n */\r\nexport default class Dialpad {\r\n  // dialpad configuration\r\n  private config: DialpadConfig;\r\n\r\n  // input field instance\r\n  private inputField!: InputElement;\r\n\r\n  // keypad instance\r\n  private keypad!: Keypad;\r\n\r\n  constructor(config: DialpadConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * page skeleton\r\n   *\r\n   * @returns {HTMLDivElement}\r\n   *\r\n   */\r\n  private skeleton(): HTMLElement {\r\n    const dialpad = document.createElement('section');\r\n    dialpad.id = this.id;\r\n    dialpad.className = 'dialpad';\r\n\r\n    // build input field\r\n    this.inputFieldLayout.build(dialpad);\r\n\r\n    // build keypad layout\r\n    this.keypadLayout.build(dialpad);\r\n\r\n    return dialpad;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * To get Input Element\r\n   *\r\n   */\r\n  private get inputFieldLayout(): InputElement {\r\n    this.inputField = new InputElement({\r\n      namespace: this.config.namespace,\r\n      onValueEmpty: () => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('disable backspace button');\r\n        this.keypad.disableBackspaceButton();\r\n      },\r\n      onValueNonEmpty: () => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('enable backspace button');\r\n        this.keypad.enableBackspaceButton();\r\n      },\r\n    });\r\n    return this.inputField;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * To get Keypad Layout\r\n   *\r\n   */\r\n  private get keypadLayout() {\r\n    this.keypad = new Keypad({\r\n      namespace: this.config.namespace,\r\n      onKeypadButtonClick: (value: string) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('clicked on button', value);\r\n\r\n        // insert value\r\n        this.inputField.insertValue(value);\r\n        this.keypad.enableBackspaceButton();\r\n      },\r\n      onCallBtnClick: () => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('clicked on call button');\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.log('placing call on ', this.inputField.value);\r\n      },\r\n      onClearBtnClick: () => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('clicked on clear button');\r\n        this.inputField.removeValue();\r\n      },\r\n    });\r\n\r\n    return this.keypad;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Unique id for page\r\n   *\r\n   * @returns {string}\r\n   *\r\n   */\r\n  get id(): string {\r\n    return `dialpad-${this.config.namespace}`;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * querySelect for app\r\n   *\r\n   * @returns {HTMLElement}\r\n   *\r\n   */\r\n  get element(): HTMLElement {\r\n    return document.getElementById(this.id)!;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Remove dialpad skeleton from dom\r\n   *\r\n   */\r\n  destroy(): void {\r\n    this.element.remove();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Append dialpad skeleton into parent element\r\n   *\r\n   * @param parentElement {HTMLElement}\r\n   */\r\n  build(parentElement: HTMLElement) {\r\n    parentElement.appendChild(this.skeleton());\r\n  }\r\n}\r\n"]}